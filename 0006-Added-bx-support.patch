From 49bd9485955ddc876e68e38cda9273866c538840 Mon Sep 17 00:00:00 2001
From: Christoph Gerum <christoph@gerum.de>
Date: Mon, 25 Oct 2010 21:16:15 +0200
Subject: [PATCH] Added bx support.

---
 machine.h      |    2 +-
 sim-outorder.c |   13 +++++++++++--
 2 files changed, 12 insertions(+), 3 deletions(-)

diff --git a/machine.h b/machine.h
index ac581e0..3858784 100644
--- a/machine.h
+++ b/machine.h
@@ -346,7 +346,7 @@ extern md_inst_t MD_NOP_INST;
  */
 
 /* inst -> enum md_opcode mapping, use this macro to decode insts */
-#define MD_TOP_OP(INST)		(((INST) >> 24) & 0x0f)
+#define MD_TOP_OP(INST)		(((INST) >> 24) & 0x0f) 
 #define MD_SET_OPCODE(OP, INST)						\
   { OP = md_mask2op[MD_TOP_OP(INST)];					\
     while (md_opmask[OP])						\
diff --git a/sim-outorder.c b/sim-outorder.c
index 54faf92..07174b0 100644
--- a/sim-outorder.c
+++ b/sim-outorder.c
@@ -4269,6 +4269,14 @@ ruu_dispatch(void)
 	  stack_recover_idx = fetch_data[fetch_head].stack_recover_idx;
 	  pseq = fetch_data[fetch_head].ptrace_seq;
 
+	  /*PATCH bx instructions*/
+	  if(((inst >> 16)  & 0xfff) == 0x12f){
+	    //printf("bx inst: %08x, pc: %x\n", inst, regs.regs_PC);
+	    int rm = inst & 0xf;
+	    int cond = inst &  0xf0000000;
+	    inst = cond | rm | 0x01a0f000;
+	  }
+
 	  /* decode the instruction */
 	  MD_SET_OPCODE(op, inst);
  	  if (!spec_mode && op == NA)
@@ -4353,6 +4361,7 @@ ruu_dispatch(void)
       if (!spec_mode)
 	regs.regs_R[MD_REG_PC] = regs.regs_PC;
       cond_valid = (((COND) == COND_AL) || md_cond_ok(inst, PSR));
+      
 
       switch (op)
 	{
@@ -5155,8 +5164,8 @@ static int get_mode_shift ( void )
         case 0x17 : return ( MD_R13_ABORT - 13 ) ;/* ABORT mode */
         default :   if ( ! spec_mode )
                     {
-                        fprintf ( stderr , "Unknown mode %x (cpsr: %x) %d\n" , 
-                            (PSR) & 0x1f , (PSR) , spec_mode ) ;
+                        fprintf ( stderr , "Unknown mode %x (cpsr: %x) %d, pc %x\n" , 
+				  (PSR) & 0x1f , (PSR) , spec_mode, regs.regs_PC ) ;
                     }
                     assert ( spec_mode ) ;
                     return ( MD_R13_UNDEF - 13 ) ;
-- 
1.6.0.4

